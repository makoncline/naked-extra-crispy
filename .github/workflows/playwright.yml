name: Playwright Tests

on:
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  DATABASE_URL: "file:./test.db"
  TURSO_DATABASE_URL: "file:./test.db"
  TURSO_DATABASE_TOKEN: "test-token"
  NODE_ENV: "test"
  NEXTAUTH_SECRET: "test-secret"
  NEXTAUTH_URL: "http://localhost:3000"
  NEXT_PUBLIC_GOOGLE_MAPS_API_KEY: "test-key"
  NEXT_PUBLIC_CLOUDINARY_UPLOAD_PRESET: "test-preset"
  NEXT_PUBLIC_BASE_URL: "http://localhost:3000"

jobs:
  test:
    name: Run Playwright Tests
    timeout-minutes: 10
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.49.1-jammy

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma Client
        run: npx prisma generate

      - name: Setup test database
        run: |
          # Verify environment variables
          echo "Using DATABASE_URL: $DATABASE_URL"
          echo "Using TURSO_DATABASE_URL: $TURSO_DATABASE_URL"

          # Push schema from prisma directory
          npx prisma db push --schema=./prisma/schema.prisma

          # Setup test database
          npx tsx e2e/setup/setup-test-db.ts

          # Verify database setup
          cat prisma/schema.prisma

      - name: Build Next.js app
        run: npm run build
        env:
          CI: true
          NODE_ENV: test
          DATABASE_URL: "file:./test.db"
          TURSO_DATABASE_URL: "file:./test.db"

      - name: Run Playwright tests
        run: npx playwright test

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 7
